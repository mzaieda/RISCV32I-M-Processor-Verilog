{\rtf1\ansi\ansicpg1252\cocoartf2576
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Mohammed Zaieda 900181473:\
I was responsible for doing the bonus feature of implementing the branch outcome in the ID stage. This required doing another module that performs the branch logical operations and implementing a new forwarding unit used in the Decode stage to handle the branch data hazards. I was also responsible of performing the testing of the instructions and taking screenshots, and fixing the instructions that produced wrong outcomes if any. I also aided in fixing some logical errors in the single memory after testing it, like making two data outs and instantiating a mux module to choose between them depending if the memory access was for instruction memory or for data memory.  I also worked on implementing the FPGA part of the project, not all, but the basic part of it. \
\
In previous stages:\
I was responsible for implementing the forwarding unit in the execute stage. I also fixed some issues based on our design related to the jal/r and auipc instructions by altering some wires and mux inputs before the PC register and the register file. I was responsible of implementing and supporting all branch instructions along with implementing the lui instruction with Omar. I was also responsible for handling the ecall instruction in the simulation by preventing any pc updates and halting the program. \
\
\
Note that most of the modules were brought from the lab experiments. }